====================================
 How to Use 2-matrix_divided.py
====================================

This library is contains the use of the function ``matrix_divided()``.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> new_matrix = [[1, 2], [3, 4], [5, 6]]

    >>> print(matrix_divided(matrix, 2))
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

    >>> print(matrix_divided(new_matrix, 4))
    [[0.25, 0.5], [0.75, 1.0], [1.25, 1.5]]

Error inputs for edge case testing

::
    >>> NoList = None
    >>> empty_list = []
    >>> empty_lists = [], [] , []
    >>> diff_lens = [[1,2,3], [4, 5], [6, 7, 8, 9]]

    >>> print(matrix_divided(NoList, 4))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided(empty_lists, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided(diff_lens, 7))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

::
